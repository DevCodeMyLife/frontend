import React, {Component} from "react";
import TextareaAutosize from "react-textarea-autosize";
import AdapterDateFns from '@mui/lab/AdapterDateFns';
import LocalizationProvider from '@mui/lab/LocalizationProvider';
import CurrencyInput from 'react-currency-input-field';
import Select from 'react-select';
import '@emotion/react'
import {MobileDatePicker} from "@mui/lab";
import {TextField} from "@mui/material";

const options = [
    { value: '0', label: '–õ–µ–≥–∫–æ' },
    { value: '1', label: '–°—Ä–µ–¥–Ω–µ' },
    { value: '2', label: '–°–ª–æ–∂–Ω–æ' },
];

const dot = (color = '#ccc') => ({
    alignItems: 'center',
    display: 'flex',

    ':before': {
        backgroundColor: color,
        borderRadius: 10,
        content: '" "',
        display: 'block',
        marginRight: 8,
        height: 10,
        width: 10,
    },
});

const colourStyles = {
    control: styles => ({ ...styles, backgroundColor: 'white' }),
    option: (styles, { data, isDisabled, isFocused, isSelected }) => {
        return {
            ...styles,
            color: isDisabled
                ? '#ccc'
                : isSelected
                    ? 'white'
                    : data.color,
            cursor: isDisabled ? 'not-allowed' : 'default',
        };
    },
    input: styles => ({ ...styles, ...dot() }),
    placeholder: styles => ({ ...styles, ...dot() }),
    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),
};

class Freelances extends Component{
    constructor(props) {
        super(props);
        this.state = {
            mode: null,
            dateNow: new Date(),
            selectedOption: null
        }

    }

    handleChangeSelect = (selectedOption) => {
        this.setState({ selectedOption }, () =>
            console.log(`Option selected:`, this.state.selectedOption)
        );
    };

    cancelTask = () =>{
        this.setState({
            mode: null
        })
    }

    createTask = event => {
        this.setState({
            mode: "create"
        })
    }

    handleChange = (event) => {
        this.setState({
            dateNow: event
        })
    }



    setStartDate(d){
        console.log(d)
    }


    render() {
        return (
            <div className="content-wall-views">
                <div className="main-place-wrapper">
                    <p>
                        <b>–§—Ä–∏–ª–∞–Ω—Å - </b> –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –≤–∑—è—Ç—å —á—å–∏-—Ç–æ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç—É –ª–∏–±–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é<br/>
                        –†–∞–∑–¥–µ–ª –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –ø–æ —ç—Ç–æ–º—É –∑–¥–µ—Å—å –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.
                    </p>
                </div>
                <div className="wrapper-search wrapper-inline-block unselectable">

                    <div>
                        <input placeholder="–ù–∞–π–¥–µ–º —á—Ç–æ –Ω–∏–±—É–¥—å –¥–ª—è –í–∞—Å..." onFocus={()=>{
                            this.cancelTask()
                        }}/>
                    </div>
                    <div className="tags-wrapper">
                        {
                            this.state.mode === "create" ?
                                null
                            :
                                // <div className="button-default-tag tags-item unselectable" id="all" action="create" onClick={this.createTask}>
                                //     –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
                                // </div>
                            null
                        }
                    </div>
                    {
                        this.state.mode === "create" ?
                            <div className="wrapper-white-default">
                                <div className="auth-box-title">
                                    <div className="title-span-auth">–ó–∞–¥–∞—á–∞</div>
                                    {/*<div className="title-span-auth-small">–ü—Ä–æ–π–¥–∏—Ç–µ –ª–µ–≥–∫—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</div>*/}
                                </div>
                                <div className="wrapper-bottom">
                                    <div className="wrapper-flex-start">
                                        <input autoFocus={true} className="input-default" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫" type="text" />
                                    </div>
                                    <div className="wrapper-flex-end-margin">
                                        <Select
                                            className="selected-box"
                                            value={this.state.selectedOption}
                                            onChange={this.handleChangeSelect}
                                            options={options}
                                            styles={colourStyles}
                                        />
                                    </div>
                                </div>
                                <div className="wrapper-input">
                                    <TextareaAutosize
                                        placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
                                        id="message_chat"
                                        style={{
                                            borderRadius: "5px"
                                        }}
                                    >
                                    </TextareaAutosize>
                                </div>
                                <div className="wrapper-bottom">
                                    <div className="wrapper-flex-start">
                                        <LocalizationProvider dateAdapter={AdapterDateFns}>
                                            <MobileDatePicker
                                                label="–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏"
                                                inputFormat="dd.MM.yyyy"
                                                value={this.state.dateNow}
                                                onChange={this.handleChange}
                                                renderInput={(params) => <TextField {...params} style={{marginRight: "10px"}} />}
                                            />
                                        </LocalizationProvider>
                                        <CurrencyInput
                                            id="input-example"
                                            className="input-default"
                                            intlConfig={{ locale: 'ru-RU', currency: 'RUB' }}
                                            name="input-name"
                                            placeholder="–°—Ç–æ–∏–º–æ—Å—Ç—å"
                                            defaultValue={1000}
                                            decimalsLimit={2}
                                            onValueChange={(value, name) => console.log(value, name)}
                                            style={{
                                                width: "220px"
                                            }}
                                        />
                                    </div>
                                    <div className="wrapper-flex-end-margin">
                                        <div className="button-default" onClick={()=>{
                                            this.cancelTask()
                                        }}>–û—Ç–º–µ–Ω–∏—Ç—å</div>
                                        <div className="button-default">–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å</div>
                                    </div>
                                </div>
                            </div>
                        :
                            null
                    }

                </div>
                <div className="feed-wrapper">
                    <div className="not_news">
                        –ù–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç... üôÅ
                    </div>
                </div>
            </div>
        )
    }
}

export default Freelances;
