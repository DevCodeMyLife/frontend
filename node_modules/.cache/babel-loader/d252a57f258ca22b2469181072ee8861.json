{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport * as React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ViewHeadRendererContext } from 'react-navi';\n\nfunction NaviHelmetProvider(_a) {\n  var canUseDOM = _a.canUseDOM,\n      context = _a.context,\n      children = _a.children;\n  var parent = React.useContext(ViewHeadRendererContext);\n  var defaultContext = React.useRef({}).current;\n\n  if (!context) {\n    context = defaultContext;\n  } // react-helmet may thinks it's in a browser due to JSDOM, so we need to\n  // manually let it know that we're doing static rendering.\n\n\n  if (canUseDOM !== undefined) {\n    ;\n    HelmetProvider.canUseDOM = canUseDOM;\n  }\n\n  if (!HelmetProvider.canUseDOM) {\n    context.getHelmet = function () {\n      return context.helmet;\n    };\n  }\n\n  if (parent) {\n    // If someone has already wrapped the app with a HeadProvider, e.g. for\n    // server side rendering, then just use that.\n    return React.createElement(React.Fragment, null, children);\n  } else {\n    return React.createElement(HelmetProvider, {\n      context: context\n    }, React.createElement(ViewHeadRendererContext.Provider, {\n      value: renderViewHead\n    }, children));\n  }\n} // Memoize these to stop a bizarre react-helmet infinite loop bug when titles\n// are recreated on each render\n\n\nvar titles = {};\n\nfunction createTitleElement(str) {\n  var title = titles[str];\n\n  if (!title) {\n    title = titles[str] = React.createElement(\"title\", null, str);\n  }\n\n  return title;\n}\n\nexport function renderViewHead(chunks) {\n  var headAndTitleChunks = chunks.filter(function (chunk) {\n    return chunk.type === 'title' || chunk.type === 'head';\n  });\n  var helmet = headAndTitleChunks && headAndTitleChunks.length && React.createElement.apply(React, __spreadArrays([Helmet, null], headAndTitleChunks.map(function (chunk) {\n    return chunk.type === 'title' ? createTitleElement(chunk.title) : chunk.head.type === React.Fragment || chunk.head.type === 'head' ? chunk.head.props.children : chunk.head;\n  })));\n  return helmet || null;\n} // If building with navi-scripts, we'll need to register this module so that\n// it can use it to add <head> tags to the build output.\n\nif (typeof window !== 'undefined') {\n  var app = window['NaviScripts'];\n\n  if (!app) {\n    app = window['NaviScripts'] = {};\n  }\n\n  if (!app.head) {\n    app.head = NaviHelmetProvider;\n  }\n}\n\nexport { NaviHelmetProvider as HelmetProvider };\nexport { Helmet };\nexport default NaviHelmetProvider;","map":{"version":3,"sources":["../../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ViewHeadRendererContext } from 'react-navi';\nfunction NaviHelmetProvider(_a) {\n    var canUseDOM = _a.canUseDOM, context = _a.context, children = _a.children;\n    var parent = React.useContext(ViewHeadRendererContext);\n    var defaultContext = React.useRef({}).current;\n    if (!context) {\n        context = defaultContext;\n    }\n    // react-helmet may thinks it's in a browser due to JSDOM, so we need to\n    // manually let it know that we're doing static rendering.\n    if (canUseDOM !== undefined) {\n        ;\n        HelmetProvider.canUseDOM = canUseDOM;\n    }\n    if (!HelmetProvider.canUseDOM) {\n        context.getHelmet = function () {\n            return context.helmet;\n        };\n    }\n    if (parent) {\n        // If someone has already wrapped the app with a HeadProvider, e.g. for\n        // server side rendering, then just use that.\n        return React.createElement(React.Fragment, null, children);\n    }\n    else {\n        return (React.createElement(HelmetProvider, { context: context },\n            React.createElement(ViewHeadRendererContext.Provider, { value: renderViewHead }, children)));\n    }\n}\n// Memoize these to stop a bizarre react-helmet infinite loop bug when titles\n// are recreated on each render\nvar titles = {};\nfunction createTitleElement(str) {\n    var title = titles[str];\n    if (!title) {\n        title = titles[str] = React.createElement(\"title\", null, str);\n    }\n    return title;\n}\nexport function renderViewHead(chunks) {\n    var headAndTitleChunks = chunks.filter(function (chunk) { return chunk.type === 'title' || chunk.type === 'head'; });\n    var helmet = headAndTitleChunks &&\n        headAndTitleChunks.length && React.createElement.apply(React, __spreadArrays([Helmet,\n        null], headAndTitleChunks.map(function (chunk) {\n        return chunk.type === 'title'\n            ? createTitleElement(chunk.title)\n            : chunk.head.type === React.Fragment || chunk.head.type === 'head'\n                ? chunk.head.props.children\n                : chunk.head;\n    })));\n    return helmet || null;\n}\n// If building with navi-scripts, we'll need to register this module so that\n// it can use it to add <head> tags to the build output.\nif (typeof window !== 'undefined') {\n    var app = window['NaviScripts'];\n    if (!app) {\n        app = window['NaviScripts'] = {};\n    }\n    if (!app.head) {\n        app.head = NaviHelmetProvider;\n    }\n}\nexport { NaviHelmetProvider as HelmetProvider };\nexport { Helmet };\nexport default NaviHelmetProvider;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}