[{"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/index.js":"1","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/About.js":"2","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Feed.js":"3","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Header.js":"4","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/FeedOnePage.js":"5","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Messages.js":"6","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/MainUser.js":"7","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Main.js":"8","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Footer.js":"9"},{"size":9951,"mtime":1628722649187,"results":"10","hashOfConfig":"11"},{"size":5289,"mtime":1628601627269,"results":"12","hashOfConfig":"11"},{"size":23491,"mtime":1629042180806,"results":"13","hashOfConfig":"11"},{"size":3404,"mtime":1629043182276,"results":"14","hashOfConfig":"11"},{"size":28013,"mtime":1628601286531,"results":"15","hashOfConfig":"11"},{"size":33424,"mtime":1628721882056,"results":"16","hashOfConfig":"11"},{"size":24239,"mtime":1628688578456,"results":"17","hashOfConfig":"11"},{"size":2954,"mtime":1628721339992,"results":"18","hashOfConfig":"11"},{"size":397,"mtime":1628430883165,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"10oc7af",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/index.js",["42"],"import { mount, route } from 'navi'\nimport {Link, Router, View} from 'react-navi'\nimport React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport './style/index.css'\nimport HelmetProvider from 'react-navi-helmet-async'\nimport Head from './components/Header'\nimport Feed from \"./components/Feed\";\nimport FeedOnePage from \"./components/FeedOnePage\";\nimport About from \"./components/About\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Centrifuge from \"centrifuge\";\nimport Main from \"./components/Main\";\nimport MainUser from \"./components/MainUser\";\nimport Messages from \"./components/Messages\";\n\nconst CONFIG = {\n    url: document.location.host === \"localhost\" ? `ws://${document.location.host}/cent/connection/websocket` : `wss://${document.location.host}/cent/connection/websocket`\n};\n\nlet auth = false\nlet cent = null\nlet user = null\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            auth: false,\n            load: false,\n            data: [],\n            feed: [],\n            token: null,\n            notification_count: 0,\n            notification: [],\n            messagesCount: 0,\n            headComponent: null\n        }\n\n    }\n\n    sendLogs(message) {\n        fetch(\"/logs/gelf\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                \"version\": \"1.1\",\n                \"host\": document.location.host,\n                \"short_message\": message,\n                \"level\": 5, \"_some_info\": \"foo\"\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(_ => {})\n    }\n\n    checkCookie(cname) {\n        let ca = document.cookie.split(';');\n        let array = {};\n\n        for (let i = 0; i < ca.length; i++) {\n            array[ca[i].split('=')[0].trim()] = ca[i].split('=')[1]\n        }\n\n        return Object.keys(array).includes(cname);\n    }\n\n    delete_cookie(name) {\n        document.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n    }\n\n\n    componentDidMount() {\n        this.setState({\n            headComponent: <Head\n                auth={false}\n                user={this.state.data[0]}\n                load={false}\n            />\n        })\n\n        let check = true\n        if (check){\n            fetch(\"/api/authentication\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                    \"finger\": window.localStorage.getItem(\"finger\")\n                })\n            })\n                .then(response => response.json())\n                .then(res => {\n                    if (res.status.code === 0){\n                        auth = true\n                        user = res.data\n                        this.setState({\n                            auth: true,\n                            data: res.data,\n                            feed: res.feed,\n                            notification_count: res.notification_count,\n                            notification: res.notification,\n                            token: res.token,\n                            messagesCount: res.count_message\n                        });\n                    }else{\n                        this.sendLogs(res.status.message)\n                        this.delete_cookie(\"access_token\")\n                    }\n                    this.setState({\n                        load: true,\n                        headComponent: null\n                    });\n\n                    this.setState({\n                        headComponent: <Head\n                            auth={true}\n                            user={res.data[0]}\n                            load={true}\n                        />\n                    })\n\n\n                })\n                .catch(error => {\n                    this.setState({\n                        auth: false,\n                        load: true,\n                        token: \"asd\",\n                        headComponent: null\n                    });\n\n                    this.setState({\n                        headComponent: <Head\n                            auth={false}\n                            load={true}\n                        />\n                    })\n                });\n        }else{\n            this.setState({\n                auth: false,\n                load: true,\n                token: \"asd\",\n                headComponent: null\n            });\n\n            this.setState({\n                headComponent: <Head\n                    auth={false}\n                    load={true}\n                />\n            })\n        }\n\n        this.centrifuge = new Centrifuge(CONFIG.url);\n        this.centrifuge.setToken(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE2MjYwMzI0MzEsImV4cCI6MTc4Mzc5ODgzMSwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.meN08YC99TeOJZWLbMKCwxhtOA_s3RaZ1QH-YARC6CM\");\n\n        this.centrifuge.on('connect', function() {\n            console.log(\"[ centrifuge connected ]\")\n        });\n        this.centrifuge.on('disconnect', function(){\n            console.log(\"[ centrifuge disconnected ]\")\n        });\n        this.centrifuge.connect();\n\n\n        this.centrifuge.subscribe(\"public\", function(message) {\n            console.log(message);\n        });\n\n        if (!window.Notification || !Notification.requestPermission){\n            console.log('...')\n        }else{\n            Notification.requestPermission(function(permission){\n                // console.log('Результат запроса прав:', permission);\n            });\n        }\n\n        cent = this.centrifuge\n    }\n\n    routes = mount({\n        '/': route({\n            title: 'DevCodeMyLife - Добро пожаловать',\n            head: <>\n                <meta name=\"description\" content=\"Социальная сеть для разработчиков\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <Main />\n        }),\n        '/messages': route({\n            title: 'Мессенджер',\n            head: <>\n                <meta name=\"description\" content=\"Мессенджер\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <Messages auth={auth} cent={cent} user={user} />\n        }),\n        '/user': route({\n            title: 'DevCodeMyLife',\n            head: <>\n                <meta name=\"description\" content=\"\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <MainUser />\n        }),\n        '/feeds': route({\n            title: 'Новости',\n            head: <>\n                <meta name=\"description\" content=\"Новости, у нас есть все, чего нет напиши сам.\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <Feed/>\n        }),\n        '/post': route({\n            title: 'DevCodeMyLife',\n            head: <>\n                <meta name=\"description\" content=\"\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <FeedOnePage/>\n        }),\n        '/about': route({\n            title: 'DevCodeMyLife',\n            head: <>\n                <meta name=\"description\" content=\"\" />\n                <script>\n                    console.log('[ app start ]')\n                </script>\n            </>,\n            view: <About/>\n        })\n    })\n\n    render(){\n        if (this.state.load){\n            if (this.state.auth){\n                return (\n                    <HelmetProvider>\n                        <div className=\"wrapper\">\n                            {\n                                this.state.headComponent\n\n                            }\n                            <BrowserRouter>\n                                <Switch>\n                                    <Route path=\"/\" render={({history, match}) =>\n                                        <Router\n                                            routes={this.routes}\n                                            history={history}\n                                            basename={match.url}\n                                        >\n                                            <Suspense fallback={null}>\n                                                <View/>\n                                            </Suspense>\n                                        </Router>\n                                    } />\n                                </Switch>\n                            </BrowserRouter>\n                            <div className=\"footer\">\n                                © {new Date().getFullYear()} DevCodeMyLife\n                            </div>\n                        </div>\n                    </HelmetProvider>\n                );\n            }else{\n                return (\n                    <div>\n                        <Head auth={false} load={true} />\n                        <Main />\n                    </div>\n                );\n            }\n        }else{\n            return (\n                <div style={{\n                    position: \"fixed\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                }}>\n                    <div className=\"loader\" />\n                </div>\n            )\n        }\n\n    }\n}\n\nReactDOM.render(\n    React.createElement(App, null),\n    document.getElementById('root')\n)","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/About.js",[],"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Feed.js",[],"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Header.js",[],"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/FeedOnePage.js",["43","44","45","46"],"import React, {Component} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport like from \"../icon/like.png\"\nimport look from \"../icon/look.png\"\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport home from \"../icon/home.png\";\nimport notes from \"../icon/notes.png\";\nimport messages from \"../icon/messages.png\";\nimport user from \"../icon/user.png\";\nimport notification from \"../icon/notification.png\";\nimport about from \"../icon/about.png\";\nimport Footer from \"./Footer\";\nimport {Link} from \"react-navi\";\nconst gfm = require('remark-gfm')\n\n\nclass FeedOnePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"React\"\n        };\n\n        this.state = {\n            error: null,\n            isLoaded: false,\n            result: null,\n            mainFeed: null,\n            feed: null,\n            isLoadedFeed: false,\n            comments: null,\n            counter: 0,\n            auth: false,\n            load: false,\n            data: null\n        }\n    }\n\n    handleKeyPress = () => {\n        document.getElementById('comments_view').scrollTop = document.getElementById('comments_view').scrollHeight\n    }\n\n\n    like(uuid) {\n        let data = {\n            feeds_uuid: uuid\n        }\n        fetch(\"api/like\", {\n            method: \"POST\",\n            body: JSON.stringify(data)\n        })\n            .then(response => response.json())\n            .then(res => {\n                if (res.status.code === 0){\n                    console.log(res)\n\n                    document.getElementById(uuid).innerHTML = res.data.count\n                }\n                console.log(res)\n                // this.setState({\n                //     isLoaded: \"access\",\n                //     result: res.data\n                // });\n                // if (!result.ok) {\n                //     throw new Error(\"Network response was not ok\");\n                // }\n                // return result.blob();\n            })\n            .catch(error => {\n                console.log(error)\n            });\n    }\n\n\n\n    components = {\n        code({node, inline, className, children, ...props}) {\n            const match = /language-(\\w+)/.exec(className || '')\n            return !inline && match ? (\n                <SyntaxHighlighter style={tomorrow} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n            ) : (\n                <code className={className} {...props}>\n                    {children}\n                </code>\n            )\n        }\n    }\n\n    previewClick (className){\n        const preview = document.getElementsByClassName(className)[0]\n        console.log(preview)\n        preview.classList.toggle(\"preview_swap\")\n    }\n\n    sendComments (){\n        let data = {\n            value: document.getElementById('text_comments').value,\n            to_uuid: document.getElementById('place_feed').getAttribute('uuid')\n        }\n\n        if (data.value !== \"\") {\n            fetch(\"api/comments\", {\n                method: \"POST\",\n                body: JSON.stringify(data)\n            })\n                .then(response => response.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.status.code === 0) {\n                        window.location.reload()\n                    }\n\n                    console.log(res)\n                })\n                .catch(error => {\n                    console.log(error)\n                });\n        }\n    }\n\n\n    componentWillMount() {\n\n        fetch(\"api/authentication\", {\n            method: \"POST\"\n        })\n            .then(response => response.json())\n            .then(res => {\n                if (res.status.code === 0 && res.data.length > 0){\n                    this.setState({\n                        isLoaded: true,\n                        auth: true,\n                        result: res.data,\n                        data: res.data,\n                        mainFeed: res.feed,\n                        notification_count: res.notification_count,\n                        notification: res.notification,\n                        token: res.token,\n                        messagesCount: res.count_message\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error)\n                this.setState({\n                    isLoaded: false,\n                    result: {}\n                });\n            });\n\n        let url = new URL(window.location.href);\n        let uuid = url.searchParams.get(\"uuid\");\n\n        let path = `api/feed/${uuid}/${window.localStorage.getItem('finger')}`\n\n        if (uuid !== \"\"){\n            fetch(path, {\n                method: \"GET\"\n            })\n                .then(response => response.json())\n                .then(res => {\n                    if (res.status.code === 0 && res.data.length > 0){\n                        this.setState({\n                            isLoadedFeed: true,\n                            feed: res.data,\n                            comments: res.comments,\n                            counter: res.counter,\n                            load: true,\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.setState({\n                        isLoaded: false,\n                        result: {},\n                        load: true\n                    });\n                });\n        }\n    }\n\n    unixToDateTime(unixTimestamp) {\n        const milliseconds = unixTimestamp * 1000\n        const dateObject = new Date(milliseconds)\n\n        return dateObject.toLocaleString()\n    }\n\n    render(){\n        let { isLoadedFeed, feed, result, comments, counter } = this.state;\n        return (\n            <div className=\"wrapper-content\">\n                <div className=\"content\">\n                    <div id=\"vertical_menu\" className=\"reviews-menu\">\n                        <div className=\"wrapper-vertical-nav\" >\n                            <div\n                                className=\"nav-item\"\n\n                            >\n                                <Link className=\"nav-value\" href=\"/feeds\">\n                                    <div  className=\"icon-image\" >\n                                        <img  src={notes} alt=\"Новости\" />\n                                    </div>\n                                    <div className=\"nav-value\">\n                                        Новости\n                                    </div>\n                                </Link>\n                            </div>\n                            {\n                                !this.state.load ?\n                                    <div className=\"loader-flex\">\n                                        <div className=\"loader-small\" />\n                                    </div>\n                                    :\n                                    this.state.auth ?\n                                        <div>\n                                            <div\n                                                className=\"nav-item\"\n\n                                            >\n                                                <Link className=\"nav-value\" href={`/user?id=${this.state.data[0].id}`}>\n                                                    <div  className=\"icon-image\" >\n                                                        <img src={user} alt=\"messages\" />\n                                                    </div>\n                                                    <div className=\"nav-value\">\n                                                        Ваша страница\n                                                    </div>\n                                                </Link>\n                                            </div>\n                                            <div\n                                                className=\"nav-item\"\n\n                                            >\n                                                {\n                                                    this.state.messagesCount ?\n                                                        <div className=\"counter-notification\" id=\"counter_notification\" path=\"/messages\" >\n                                                            {\n                                                                this.state.messagesCount > 10 ?\n                                                                    \"10+\"\n                                                                    :\n                                                                    this.state.messagesCount\n                                                            }\n                                                        </div>\n                                                        :\n                                                        null\n                                                }\n                                                <Link className=\"nav-value\" href=\"/messages\">\n                                                    <div  className=\"icon-image\" >\n                                                        <img src={messages} alt=\"messages\" />\n                                                    </div>\n                                                    <div className=\"nav-value\">\n                                                        Мессенджер\n                                                    </div>\n                                                </Link>\n                                            </div>\n                                        </div>\n                                        : null\n                            }\n                            {/*<div*/}\n                            {/*    className=\"nav-item\"*/}\n\n\n                            {/*>*/}\n                            {/*    <Link href=\"/about\" className=\"nav-value\">*/}\n                            {/*        <div  className=\"icon-image\">*/}\n                            {/*            <img path=\"/about\" src={about}/>*/}\n                            {/*        </div>*/}\n                            {/*        <div className=\"nav-value\">*/}\n                            {/*            Поддержка*/}\n                            {/*        </div>*/}\n                            {/*    </Link>*/}\n\n                            {/*</div>*/}\n                        </div>\n                    </div>\n                    <div className=\"content-wall-views\">\n                        {\n                            isLoadedFeed ?\n                                <div className=\"comments-view\" id=\"comments_view\">\n                                    <div className=\"rectangle-back\">\n                                        <div className=\"button-default wrapper-inline-block\" onClick={() => {\n                                            window.history.go(-1)\n                                        }}>\n                                            Назад\n                                        </div>\n                                    </div>\n                                    {feed.map(data =>\n                                        <div className=\"place-items\" id=\"place_feed\" uuid={data?.ID}>\n                                            {/*<div className=\"title-page\">*/}\n                                            {/*    О нас*/}\n                                            {/*</div>*/}\n                                            <div className=\"feed-item-value\">\n                                                <div key=\"asldk\" className=\"wrapper-data\">\n                                                    <div key=\"aksdlkasd\"  className=\"photo-wrapper\">\n                                                        <img key=\"asdmmmmasd\" src={data?.photo} alt={data?.user} />\n                                                    </div>\n                                                    <div className=\"value-post\">\n                                                        <div className=\"feed-item-title\">\n                                                            {data?.user}\n                                                            <div className=\"feed-item-datetime\">\n                                                                {this.unixToDateTime(data?.date_time)}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div key=\"asldk\" className=\"wrapper-data\">\n                                                    {/*<div key=\"aksdlkasd\"  className=\"photo-wrapper\">*/}\n\n                                                    {/*</div>*/}\n                                                    <ReactMarkdown className=\"value-post\" remarkPlugins={[gfm]} components={this.components}>\n                                                        {data?.value}\n                                                    </ReactMarkdown>\n                                                </div>\n                                            </div>\n                                            <div className=\"wrapper-bottom\">\n                                                <div className=\"like_wrapper wrapper-flex-end\">\n                                                    <div className=\"like\">\n                                                        <div className=\"like-item\">\n                                                            <img src={look}  alt=\"like\"/>\n                                                        </div>\n                                                        <div className=\"like-item\">\n                                                <span className=\"like-count\">\n                                                    {counter}\n                                                </span>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"like\">\n                                                        <div className=\"like-item\" onClick={() => this.like(data?.ID)}>\n                                                            <img src={like}  alt=\"like\"/>\n                                                        </div>\n                                                        <div className=\"like-item\">\n                                                <span className=\"like-count\" id={data?.ID}>\n                                                    {data?.count_like}\n                                                </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {\n                                                this.state.isLoaded ?\n                                                    result.map(res =>\n                                                        <div className=\"feed-comments-wrapper-item background-white\">\n                                                            <div className=\"wrapper-comments\">\n                                                                <div className=\"comments-title bottom-line\">Комментарии</div>\n                                                                <div className=\"wall-comments\">\n                                                                    {\n                                                                        this.state.comments.length ?\n                                                                            comments.map(com =>\n                                                                                <div>\n                                                                                    <div className=\"feed-item-value bottom-line\">\n                                                                                        <div className=\"feed-item-value\">\n                                                                                            <div key=\"asldk\" className=\"wrapper-data\">\n                                                                                                <div key=\"aksdlkasd\"\n                                                                                                     className=\"photo-wrapper\">\n                                                                                                    <img key=\"asdmmmmasd\"\n                                                                                                         src={com?.photo}\n                                                                                                         alt={com?.user}/>\n                                                                                                </div>\n                                                                                                <div className=\"value-post\">\n                                                                                                    <div className=\"feed-item-title\">\n                                                                                                        {com?.user}\n                                                                                                        <div\n                                                                                                            className=\"feed-item-datetime\">\n                                                                                                            {this.unixToDateTime(com?.date_time)}\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"wrapper-data\">\n                                                                                            {/*<div   className=\"photo-wrapper\">*/}\n\n                                                                                            {/*</div>*/}\n                                                                                            <ReactMarkdown className=\"value-post\"\n                                                                                                           remarkPlugins={[gfm]}\n                                                                                                           components={this.components}>\n                                                                                                {com?.value}\n                                                                                            </ReactMarkdown>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            )\n                                                                            :\n                                                                            <div className=\"no-comments\">Новых комментариев нет.</div>\n                                                                    }\n                                                                </div>\n                                                                <div className=\"wrapper-data\">\n                                                                    <div key=\"aksdlkasd\" className=\"photo-wrapper\">\n                                                                        <img key=\"asdmmmmasd\" src={res?.avatar_url} alt={res?.login}/>\n                                                                    </div>\n                                                                    <div className=\"value-post placeholder-main-feed\">\n                                                                        <TextareaAutosize\n                                                                            className=\"feed-textarea\"\n                                                                            onChange={this.handleChangeTextarea}\n                                                                            autoFocus={false}\n                                                                            placeholder=\"Напишите Ваш комментарий\"\n                                                                            id=\"text_comments\"\n                                                                            onKeyPress={this.handleKeyPress}\n                                                                        >\n\n                                                                        </TextareaAutosize>\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"wrapper-flex-end create-feed-wrapper-button\">\n                                                                    <div className=\"button-default\"\n                                                                         onClick={() => this.sendComments()}>Отправить\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                    :\n                                                    <div className=\"feed-comments-wrapper-item background-white\">\n                                                        <div className=\"wrapper-comments\">\n                                                            <div className=\"comments-title\">Комментарии</div>\n                                                            <div className=\"wall-comments\">\n                                                                {\n                                                                    this.state.comments.length ?\n                                                                        comments.map(com =>\n                                                                            <div>\n                                                                                <div className=\"feed-item-value bottom-line\">\n                                                                                    <div className=\"feed-item-value\">\n                                                                                        <div key=\"asldk\" className=\"wrapper-data\">\n                                                                                            <div key=\"aksdlkasd\"\n                                                                                                 className=\"photo-wrapper\">\n                                                                                                <img key=\"asdmmmmasd\" src={com?.photo}\n                                                                                                     alt={com?.user}/>\n                                                                                            </div>\n                                                                                            <div className=\"value-post\">\n                                                                                                <div className=\"feed-item-title\">\n                                                                                                    <div className=\"link-user\"\n                                                                                                         onClick={this.copyLogin}>\n                                                                                                        {com?.user}\n                                                                                                    </div>\n                                                                                                    <div className=\"feed-item-datetime\">\n                                                                                                        {this.unixToDateTime(com?.date_time)}\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <div className=\"wrapper-data\">\n                                                                                        {/*<div className=\"photo-wrapper\">*/}\n\n                                                                                        {/*</div>*/}\n                                                                                        <ReactMarkdown className=\"value-post\"\n                                                                                                       remarkPlugins={[gfm]}\n                                                                                                       components={this.components}>\n                                                                                            {com?.value}\n                                                                                        </ReactMarkdown>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        )\n                                                                        :\n                                                                        <div className=\"no-comments\">Новых комментариев нет.</div>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                            }\n\n                                        </div>\n                                    )}\n                                </div>\n                            :\n                                null\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedOnePage;\n","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Messages.js",["47","48","49","50","51"],"import React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport send from \"../icon/send.png\"\nimport k from \"../icon/k.png\"\nimport song from \"../sound/pop.mp3\"\nimport home from \"../icon/home.png\";\nimport notes from \"../icon/notes.png\";\nimport messages from \"../icon/messages.png\";\nimport notification from \"../icon/notification.png\";\nimport about from \"../icon/about.png\";\nimport Footer from \"./Footer\";\nimport {Link} from \"react-navi\";\nimport Centrifuge from \"centrifuge\";\nimport Head from \"./Header\";\nimport user from \"../icon/user.png\";\n\nconst CONFIG = {\n    url: document.location.host === \"localhost\" ? `ws://${document.location.host}/cent/connection/websocket` : `wss://${document.location.host}/cent/connection/websocket`\n};\n\n\nclass Messages extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            auth: this.props.auth,\n            cent: {},\n            _createMessage: false,\n            chats: [],\n            messages: [],\n            dialog: false,\n            cid: null,\n            user: this.props.user,\n            cent_channel: null,\n            typing: null,\n            context: new AudioContext(),\n            audio: new Audio(song),\n            loadCent: false,\n            messagesCount: 0,\n            load: false,\n            data: null\n        }\n    }\n\n    createMessage = (event) => {\n        this.setState({\n            _createMessage: true\n        })\n    }\n\n    allMessage = (event) => {\n        this.setState({\n            _createMessage: false\n        })\n\n        if (this.state.cent_channel && this.state.cid) {\n            this.state.cent_channel.unsubscribe(this.state.cid)\n        }\n\n        console.log(window.location.pathname)\n        if (event)\n            window.history.pushState({urlPath:`/messages`},\"\",`/messages`)\n\n        fetch(\"/api/messages\", {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n            .then(res => {\n                if (res?.status?.code === 0){\n                    this.setState({\n                        chats: res?.data,\n                        dialog: false,\n                        messages: []\n                    })\n                }\n            })\n            .catch(error => {\n                console.log(error)\n            });\n    }\n\n\n\n    unixToDateTime(unixTimestamp) {\n        const milliseconds = unixTimestamp * 1000\n        const dateObject = new Date(milliseconds)\n\n        return dateObject.toLocaleString()\n    }\n\n    sendMessageButton = (event) => {\n        let _this = this\n        let data = {\n            value: document.getElementById(\"message_chat\").value,\n            c_id: this.state.cid\n        }\n\n        _this.clearInput(document.getElementById(\"message_chat\"))\n\n        if (data.value.length > 0) {\n            fetch(\"/api/messages\", {\n                method: \"POST\",\n                body: JSON.stringify(data)\n            })\n                .then(response => response.json())\n                .then(res => {})\n                .catch(error => {\n                    console.log(error)\n                });\n        }\n\n    }\n\n    sendMessage = (event) => {\n        let _this = this\n        let data = {\n            value: event.target.value,\n            c_id: this.state.cid\n        }\n\n\n\n        if (this.state.cent_channel){\n            this.state.cent_channel.publish(\n                {\n                    \"input\": {\n                        \"typing\": this.state.user[0].login\n                    }\n                }).then(\n                function() {\n                    // success ack from Centrifugo received\n                }, function(err) {\n                    // publish call failed with error\n                }\n            );\n        }\n\n        if (event.keyCode===13){\n            event.preventDefault();\n            _this.clearInput(event.target)\n\n            if (data.value.length > 0) {\n                fetch(\"/api/messages\", {\n                    method: \"POST\",\n                    body: JSON.stringify(data)\n                })\n                    .then(response => response.json())\n                    .then(res => {\n                        _this.clearInput(event.target)\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    });\n            }\n\n        }\n    }\n\n    clearInput(target) {\n        target.value = target.value.replace(/[\\n\\r]/g, '')\n        target.value = ''\n        target.style.height = \"50px\"\n    }\n\n    openDialog(cid) {\n        let _this = this\n        let path = `/api/messages/${cid}`\n\n        window.history.pushState({urlPath:`/messages?cid=${cid}`},\"\",`/messages?cid=${cid}`)\n\n        let cent_channel = _this.state.cent.subscribe(cid, function (message) {\n            console.log(\"sub :\" + cid)\n            let data = _this.state.messages\n\n            // console.log(message?.data.login, _this.state.user[0].login)\n            // if (message?.data.login !== _this.state.user[0].login){\n            //     // let notification = new Notification(message.data.login,\n            //     //     { body: message.data.value.substring(0, 40) + \"...\", dir: 'auto', icon: message.data.avatar_url}\n            //     // );\n            //     // console.log(notification)\n            //     _this.state.context.resume().then(() => {\n            //         _this.state.audio.play();\n            //         console.log('Playback resumed successfully');\n            //     });\n            //\n            //\n            // }\n\n\n            if (message.data?.input?.typing !== _this.state.user[0].login){\n                if (message.data?.input?.typing){\n                    _this.setState({\n                        typing: `${message?.data?.input?.typing} набирает сообщение.`\n                    })\n                    document.getElementById(\"hide-typing\").style.display = \"block\"\n                    setTimeout(() => {\n                        document.getElementById(\"hide-typing\").style.display = \"none\"\n                    }, 5000)\n\n                }\n            }\n\n            if (message?.data?.login){\n                console.log(message?.data?.login, _this.state.user[0].login)\n                if (message?.data?.login !== _this.state.user[0].login){\n                    _this.state.context.resume().then(() => {\n                        _this.state.audio.play();\n                        console.log('Playback resumed successfully');\n                    });\n                }\n                data.push(message?.data)\n                _this.setState({messages: data})\n                if (document.getElementById('messages'))\n                    document.getElementById('messages').scrollTo({top: document.getElementById('messages').scrollHeight, left: 0, behavior: 'smooth' });\n            }\n\n\n\n            // document.getElementById('messages').scrollTop = document.getElementById('messages').scrollHeight\n        });\n\n        this.setState({\n            cent_channel: cent_channel\n        })\n\n        fetch(path, {\n            method: \"GET\"\n        })\n            .then(response => response.json())\n            .then(res => {\n                if (res?.status?.code === 0){\n                    this.setState({\n                        messages: res?.data,\n                        dialog: true,\n                        cid: cid\n                    })\n\n                    document.getElementById('messages').scrollTo({top: document.getElementById('messages').scrollHeight, left: 0, behavior: 'smooth' });\n\n\n                }\n            })\n            .catch(error => {\n                console.log(error)\n            });\n    }\n\n    changerPage = () => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const cid = urlParams.get('cid');\n\n        if (cid){\n            this.setState({\n                cid: cid,\n                chats: [1]\n            })\n\n            this.openDialog(cid)\n        }else{\n            this.allMessage()\n        }\n    }\n\n    componentDidMount() {\n\n        fetch(\"/api/authentication\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                \"finger\": window.localStorage.getItem(\"finger\")\n            })\n        })\n            .then(response => response.json())\n            .then(res => {\n                if (res.status.code === 0){\n\n                    this.setState({\n                        auth: true,\n                        load: true,\n                        data: res.data,\n                        user: res.data,\n                        notification_count: res.notification_count,\n                        notification: res.notification,\n                        token: res.token,\n                        messagesCount: res.count_message\n                    });\n                }else{\n                    this.sendLogs(res.status.message)\n                    this.delete_cookie(\"access_token\")\n                }\n\n\n\n\n\n            })\n            .catch(error => {\n                this.setState({\n                    auth: false,\n                    load: true\n                });\n            });\n\n        this.centrifuge = new Centrifuge(CONFIG.url);\n        this.centrifuge.setToken(\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE2MjYwMzI0MzEsImV4cCI6MTc4Mzc5ODgzMSwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.meN08YC99TeOJZWLbMKCwxhtOA_s3RaZ1QH-YARC6CM\");\n\n\n        let _this = this\n        this.centrifuge.on('connect', function() {\n            _this.changerPage()\n            console.log(\"[ centrifuge connected ]\")\n        });\n        this.centrifuge.on('disconnect', function(){\n            console.log(\"[ centrifuge disconnected ]\")\n        });\n        this.centrifuge.connect();\n\n\n        this.centrifuge.subscribe(\"public\", function(message) {\n            console.log(message);\n        });\n\n\n        this.setState({\n            cent: this.centrifuge,\n            loadCent: true\n        })\n\n    }\n\n    render() {\n\n        if (this.state.loadCent) {\n            return (\n                <div className=\"wrapper-content\">\n                    <div className=\"content\">\n                        <div id=\"vertical_menu\" className=\"reviews-menu\">\n                            <div className=\"wrapper-vertical-nav\" >\n                                <div\n                                    className=\"nav-item\"\n\n                                >\n                                    <Link className=\"nav-value\" href=\"/feeds\">\n                                        <div  className=\"icon-image\" >\n                                            <img  src={notes} alt=\"Новости\" />\n                                        </div>\n                                        <div className=\"nav-value\">\n                                            Новости\n                                        </div>\n                                    </Link>\n                                </div>\n                                {\n                                    !this.state.load ?\n                                        <div className=\"loader-flex\">\n                                            <div className=\"loader-small\" />\n                                        </div>\n                                        :\n                                        this.state.auth ?\n                                            <div>\n                                                <div\n                                                    className=\"nav-item\"\n\n                                                >\n                                                    <Link className=\"nav-value\" href={`/user?id=${this.state.data[0].id}`}>\n                                                        <div  className=\"icon-image\" >\n                                                            <img src={user} alt=\"messages\" />\n                                                        </div>\n                                                        <div className=\"nav-value\">\n                                                            Ваша страница\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                                <div\n                                                    className=\"nav-item\"\n\n                                                >\n                                                    {\n                                                        this.state.messagesCount ?\n                                                            <div className=\"counter-notification\" id=\"counter_notification\" path=\"/messages\" >\n                                                                {\n                                                                    this.state.messagesCount > 10 ?\n                                                                        \"10+\"\n                                                                        :\n                                                                        this.state.messagesCount\n                                                                }\n                                                            </div>\n                                                            :\n                                                            null\n                                                    }\n                                                    <Link className=\"nav-value\" href=\"/messages\">\n                                                        <div  className=\"icon-image\" >\n                                                            <img src={messages} alt=\"messages\" />\n                                                        </div>\n                                                        <div className=\"nav-value\">\n                                                            Мессенджер\n                                                        </div>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                            : null\n                                }\n                                {/*<div*/}\n                                {/*    className=\"nav-item\"*/}\n\n\n                                {/*>*/}\n                                {/*    <Link href=\"/about\" className=\"nav-value\">*/}\n                                {/*        <div  className=\"icon-image\">*/}\n                                {/*            <img path=\"/about\" src={about}/>*/}\n                                {/*        </div>*/}\n                                {/*        <div className=\"nav-value\">*/}\n                                {/*            Поддержка*/}\n                                {/*        </div>*/}\n                                {/*    </Link>*/}\n\n                                {/*</div>*/}\n                            </div>\n                        </div>\n                        <div className=\"content-wall-views\">\n                            <div className=\"wrapper-content-default\">\n                                <div className=\"messages-control-nav\">\n                                    <div className=\"messages-control-nav-item\">\n                                        <div className=\"button-default\" onClick={this.allMessage}>\n                                            Все диалоги\n                                        </div>\n                                        {/*<div className=\"button-default\" onClick={this.createMessage}>*/}\n                                        {/*    Написать*/}\n                                        {/*</div>*/}\n                                    </div>\n                                </div>\n                                {\n                                    this.state._createMessage ?\n                                        <div className=\"wrapper-maker-message\">\n                                            <div className=\"maker-message\">\n                                                <div className=\"wrapper-maker-message-input\">\n                                                    <input className=\"in\" placeholder=\"Кому\"/>\n                                                </div>\n                                                <div className=\"wrapper-maker-message-input\">\n                                                    <TextareaAutosize\n                                                        placeholder=\"Введите Ваше сообщение\"\n                                                        minRows={15}\n                                                    >\n\n                                                    </TextareaAutosize>\n                                                </div>\n\n                                                <div className=\"wrapper-flex-end\">\n                                                    <div className=\"button-default\">\n                                                        Отправить\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        :\n                                        this.state.chats.length < 1 ?\n                                            <div className=\"error-page\">\n                                                Вы не создали еще ни одного диалога, либо Вам никто не написал.\n                                            </div>\n                                            :\n                                            this.state.dialog ?\n                                                <div className=\"wrapper-chat\">\n                                                    <div className=\"wrapper-items\" id=\"messages\" style={{\n                                                        background: \"#fff\"\n                                                    }}>\n                                                        {\n\n                                                            this.state.messages?.map(message =>\n                                                                this.state.user[0].id === message.uid ?\n                                                                    <div className=\"message-item flex-end\" style={{\n                                                                        // display: \"flex\",\n                                                                        boxShadow: \"none\",\n                                                                        // flexFlow: \"column wrap\"\n                                                                    }}>\n                                                                        <div className=\"wrapper-data\" style={{\n                                                                            flexDirection: \"row\",\n                                                                            borderRadius: \"10px\"\n                                                                        }}>\n                                                                            <div className=\"photo-wrapper\">\n                                                                                <img src={message.avatar_url} alt={message.login}\n                                                                                     onClick={(e) => {\n                                                                                         e.preventDefault();\n                                                                                         window.location.href = `/user?id=${message.uid}`\n                                                                                     }}/>\n                                                                            </div>\n                                                                            <div className=\"value-post\">\n                                                                                <div className=\"feed-item-title\">\n                                                                                    <div className=\"link-user\" onClick={(e) => {\n                                                                                        e.preventDefault();\n                                                                                        window.location.href = `/user?id=${message?.uid}`\n                                                                                    }}>\n                                                                                        {message?.login}\n                                                                                    </div>\n                                                                                    <div className=\"feed-item-datetime\">\n                                                                                        {this.unixToDateTime(message?.date_time)}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <p>\n                                                                                    {message.value}\n                                                                                </p>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                    :\n                                                                    <div className=\"message-item flex-start\" style={{\n                                                                        // display: \"flex\",\n                                                                        boxShadow: \"none\",\n                                                                        // flexFlow: \"column wrap\"\n                                                                    }}>\n                                                                        <div className=\"wrapper-data\" style={{\n                                                                            flexDirection: \"row\",\n                                                                            borderRadius: \"10px\"\n                                                                        }}>\n                                                                            <div className=\"photo-wrapper\">\n                                                                                <img src={message.avatar_url} alt={message.login}\n                                                                                     onClick={(e) => {\n                                                                                         e.preventDefault();\n                                                                                         window.location.href = `/user?id=${message.uid}`\n                                                                                     }}/>\n                                                                            </div>\n                                                                            <div className=\"value-post\">\n                                                                                <div className=\"feed-item-title\">\n                                                                                    <div className=\"link-user\" onClick={(e) => {\n                                                                                        e.preventDefault();\n                                                                                        window.location.href = `/user?id=${message?.uid}`\n                                                                                    }}>\n                                                                                        {message?.login}\n                                                                                    </div>\n                                                                                    <div className=\"feed-item-datetime\">\n                                                                                        {this.unixToDateTime(message?.date_time)}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <p>\n                                                                                    {message.value}\n                                                                                </p>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                            )\n                                                        }\n                                                        <div className=\"typing_user\" id=\"typing_user\">\n                                                            <div className=\"hide-typing\" id=\"hide-typing\">\n                                                                <div className=\"image-icon-typing\">\n                                                                    <img src={k} alt=\"typing\"/>\n                                                                </div>\n                                                                <div className=\"typing-text\">\n                                                                    {this.state.typing}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"wrapper-input\">\n                                                        <TextareaAutosize\n                                                            onKeyDown={this.sendMessage}\n                                                            placeholder=\"Введите сообщение\"\n                                                            autoFocus={true}\n                                                            maxRows={15}\n                                                            id=\"message_chat\"\n                                                            style={{\n                                                                borderRadius: \"30px\"\n                                                            }}\n                                                        >\n\n                                                        </TextareaAutosize>\n                                                        <div className=\"send-button\" onClick={this.sendMessageButton}>\n                                                            <img src={send} alt=\"send\"/>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                :\n                                                <div className=\"wrapper-chats-main\">\n                                                    {\n                                                        this.state.chats.map(chat =>\n                                                            chat.no_read_count ?\n                                                                <div className=\"feed-wrapper-item-chat chat-flex-row\"\n                                                                     style={{marginBottom: 0, background: \"#d7e4fc\"}}\n                                                                     onClick={() => this.openDialog(chat.c_id)}>\n                                                                    <div className=\"photo-wrapper-chat\">\n                                                                        <img src={chat.avatar_url} alt={chat.avatar_url}/>\n                                                                    </div>\n                                                                    <div className=\"feed-item-title\" style={{\n                                                                        padding: \"13px\",\n\n                                                                    }}>\n                                                                        {chat.login}\n                                                                        <div className=\"feed-item-datetime\">\n                                                                            {chat.last_message?.substring(0, 40) + \"...\"}\n                                                                        </div>\n                                                                    </div>\n                                                                    {/*<div className=\"feed-item-title\" style={{*/}\n                                                                    {/*    textAlign: \"center\",*/}\n                                                                    {/*    padding: \"5px\",*/}\n                                                                    {/*    width: \"170px\"*/}\n                                                                    {/*}}>*/}\n                                                                    {/*    <div className=\"last-message\">*/}\n                                                                    {/*        {chat.last_message?.substring(0, 40) + \"...\"}*/}\n                                                                    {/*    </div>*/}\n                                                                    {/*</div>*/}\n                                                                </div>\n                                                                :\n                                                                <div className=\"feed-wrapper-item-chat chat-flex-row\"\n                                                                     style={{marginBottom: 0}}\n                                                                     onClick={() => this.openDialog(chat.c_id)}>\n                                                                    <div className=\"photo-wrapper-chat\">\n                                                                        <img src={chat.avatar_url} alt={chat.avatar_url}/>\n                                                                    </div>\n                                                                    <div className=\"feed-item-title\" style={{\n                                                                        padding: \"13px\",\n                                                                    }}>\n                                                                        {chat.login}\n                                                                        <div className=\"feed-item-datetime\">\n                                                                            {chat.last_message?.substring(0, 40) + \"...\"}\n                                                                        </div>\n                                                                    </div>\n                                                                    {/*<div className=\"feed-item-title\" style={{*/}\n                                                                    {/*    textAlign: \"center\",*/}\n                                                                    {/*    padding: \"5px\",*/}\n                                                                    {/*    width: \"170px\"*/}\n                                                                    {/*}}>*/}\n                                                                    {/*    <div className=\"last-message\">*/}\n                                                                    {/*        {chat.last_message?.substring(0, 40) + \"...\"}*/}\n                                                                    {/*    </div>*/}\n                                                                    {/*</div>*/}\n                                                                </div>\n                                                        )\n                                                    }\n                                                </div>\n\n\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }else{\n            return null\n        }\n    }\n}\n\nexport default Messages;\n","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/MainUser.js",["52","53","54","55","56"],"import React, {Component} from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {tomorrow} from \"react-syntax-highlighter/dist/esm/styles/prism\"\nimport TextareaAutosize from 'react-textarea-autosize';\nimport like from \"../icon/like.png\";\nimport look from \"../icon/look.png\";\nimport open from \"../icon/open.png\"\nimport close from \"../icon/close.png\"\nimport Head from \"./Header\";\nimport home from \"../icon/home.png\";\nimport notes from \"../icon/notes.png\";\nimport messages from \"../icon/messages.png\";\nimport notification from \"../icon/notification.png\";\nimport about from \"../icon/about.png\";\nimport Footer from \"./Footer\";\nimport {Link} from \"react-navi\";\nimport user from \"../icon/user.png\";\n\n\nconst gfm = require('remark-gfm')\n\n\n\nclass MainUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"React\"\n    };\n    this.state = {\n      error: false,\n      isLoaded: false,\n      result: null,\n      mainFeed: null,\n      textNews: \"...\",\n      heading: \"Текст заголовка\",\n      prevState: null,\n      clicked_new_post: false,\n      show_textarea: false,\n      id: 0,\n      data: [],\n      notUser: false,\n      close: true,\n      load: false,\n    }\n  }\n\n  like(uuid) {\n    let data = {\n      feeds_uuid: uuid\n    }\n    fetch(\"/api/like\", {\n      method: \"POST\",\n      body: JSON.stringify(data)\n    })\n        .then(response => response.json())\n        .then(res => {\n          if (res.status.code === 0){\n            console.log(res)\n\n            document.getElementById(uuid).innerHTML = res.data.count\n          }\n          console.log(res)\n          // this.setState({\n          //     isLoaded: \"access\",\n          //     result: res.data\n          // });\n          // if (!result.ok) {\n          //     throw new Error(\"Network response was not ok\");\n          // }\n          // return result.blob();\n        })\n        .catch(error => {\n          console.log(error)\n        });\n  }\n\n  previewClick (className){\n    const preview = document.getElementsByClassName(className)[0]\n    console.log(preview)\n    preview.classList.toggle(\"preview_swap\")\n  }\n\n\n  componentDidMount() {\n\n    fetch(\"/api/authentication\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        \"finger\": window.localStorage.getItem(\"finger\")\n      })\n    })\n        .then(response => response.json())\n        .then(res => {\n          if (res.status.code === 0){\n            this.setState({\n              auth: true,\n              data: res.data,\n              feed: res.feed,\n              load: true,\n              notification_count: res.notification_count,\n              notification: res.notification,\n              token: res.token,\n              messagesCount: res.count_message\n            });\n\n\n          }else{\n            this.sendLogs(res.status.message)\n            this.delete_cookie(\"access_token\")\n          }\n\n          const urlParams = new URLSearchParams(window.location.search);\n          const id = urlParams.get('id');\n          console.log(id)\n          let path = `/api/user/${id}`\n\n          fetch(path, {\n            method: \"GET\"\n          })\n              .then(response => response.json())\n              .then(res => {\n                if (res.status.code === 0 && res.data.length > 0){\n                  this.setState({\n                    isLoaded: true,\n                    id: id,\n                    result: res.data,\n                    mainFeed: res.feed,\n                    notUser: false\n                  });\n                }else{\n                  this.setState({\n                    isLoaded: false,\n                    result: {},\n                    notUser: true,\n                    error: true\n                  });\n                }\n              })\n              .catch(error => {\n                this.setState({\n                  isLoaded: false,\n                  error: true,\n                  result: {},\n                  notUser: true\n                });\n                console.log(error)\n              });\n\n        })\n        .catch(error => {\n          this.setState({\n            auth: false,\n            load: true,\n          });\n        });\n\n\n\n  }\n\n  components = {\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || '')\n      return !inline && match ? (\n          <SyntaxHighlighter style={tomorrow} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n      ) : (\n          <code className={className} {...props}>\n            {children}\n          </code>\n      )\n    }\n  }\n\n  feedNew() {\n    let data = {\n      title: \"\",\n      value: document.getElementById(\"text_news\").value,\n      close: this.state.close\n    }\n\n    if (data.value.length > 3) {\n      fetch(\"/api/feed\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n      })\n          .then(response => response.json())\n          .then(res => {\n            console.log(res)\n            if (res.status.code === 0) {\n              window.location.reload()\n            }\n\n          })\n          .catch(error => {\n            console.log(error)\n          });\n    }\n  }\n\n  unixToDateTime(unixTimestamp) {\n    const milliseconds = unixTimestamp * 1000\n    const dateObject = new Date(milliseconds)\n\n    return dateObject.toLocaleString()\n  }\n\n  handleChangeTextarea = (event) => {\n    if (event.target.value === \"\"){\n      this.setState({textNews: \"Текст статьи\"})\n    }else{\n      this.setState({textNews: event.target.value})\n    }\n  }\n\n  handleChangeInput = (event) => {\n    if (event.target.value === \"\") {\n      this.setState({heading: \"Текст заголовка\"})\n    }else{\n      this.setState({heading: event.target.value})\n    }\n\n  }\n\n\n\n  newInputText = (event) => {\n    this.setState({clicked_new_post: true, show_textarea: true})\n\n\n    // event.target\n    // a.innerHTML = `\n    //   <textarea onChange={this.handleChangeTextarea} placeholder=\"Что у Вас нового?\" id=\"text_news\">\n    //\n    //   </textarea>\n    // `\n  }\n\n  createChat = event => {\n    let data = {\n      to_uid: Number(this.state.id)\n    }\n\n\n    fetch(\"/api/create_chats\", {\n      method: \"POST\",\n      body: JSON.stringify(data)\n    })\n        .then(response => response.json())\n        .then(res => {\n          console.log(res)\n          if (res.status.code === 0) {\n            window.location.href = `/messages?cid=${res.data}`\n          }\n\n        })\n        .catch(error => {\n          console.log(error)\n        });\n\n  }\n\n  onKeyDown = event => {\n    // 'event.key' will return the key as a string: 'Tab'\n    // 'event.keyCode' will return the key code as a number: Tab = '9'\n    // You can use either of them\n    if (event.keyCode === 9) {\n      // Prevent the default action to not lose focus when tab\n      event.preventDefault();\n\n      // Get the cursor position\n      const { selectionStart, selectionEnd } = event.target;\n      // update the state\n      this.setState(\n          prevState => ({\n            lyrics:\n                prevState.lyrics.substring(0, selectionStart) +\n                \"\\t\" + // '\\t' = tab, size can be change by CSS\n                prevState.lyrics.substring(selectionEnd)\n          }),\n          // update the cursor position after the state is updated\n          () => {\n            this.textAreaRef.current.selectionStart = this.textAreaRef.current.selectionEnd =\n                selectionStart + 1;\n          }\n      );\n    }\n  };\n\n\n\n  render(){\n    let { isLoaded, textNews, mainFeed, result, clicked_new_post } = this.state;\n    return (\n        <div className=\"wrapper-content\">\n          <div className=\"content\">\n            <div id=\"vertical_menu\" className=\"reviews-menu\">\n              <div className=\"wrapper-vertical-nav\" >\n                <div\n                    className=\"nav-item\"\n\n                >\n                  <Link className=\"nav-value\" href=\"/feeds\">\n                    <div  className=\"icon-image\" >\n                      <img  src={notes} alt=\"Новости\" />\n                    </div>\n                    <div className=\"nav-value\">\n                      Новости\n                    </div>\n                  </Link>\n                </div>\n                {\n                  !this.state.load ?\n                      <div className=\"loader-flex\">\n                        <div className=\"loader-small\" />\n                      </div>\n                      :\n                      this.state.auth ?\n                          <div>\n                            <div\n                                className=\"nav-item\"\n\n                            >\n                              <Link className=\"nav-value\" href={`/user?id=${this.state.data[0].id}`}>\n                                <div  className=\"icon-image\" >\n                                  <img src={user} alt=\"messages\" />\n                                </div>\n                                <div className=\"nav-value\">\n                                  Ваша страница\n                                </div>\n                              </Link>\n                            </div>\n                            <div\n                                className=\"nav-item\"\n\n                            >\n                              {\n                                this.state.messagesCount ?\n                                    <div className=\"counter-notification\" id=\"counter_notification\" path=\"/messages\" >\n                                      {\n                                        this.state.messagesCount > 10 ?\n                                            \"10+\"\n                                            :\n                                            this.state.messagesCount\n                                      }\n                                    </div>\n                                    :\n                                    null\n                              }\n                              <Link className=\"nav-value\" href=\"/messages\">\n                                <div  className=\"icon-image\" >\n                                  <img src={messages} alt=\"messages\" />\n                                </div>\n                                <div className=\"nav-value\">\n                                  Мессенджер\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                          : null\n                }\n                {/*<div*/}\n                {/*    className=\"nav-item\"*/}\n\n\n                {/*>*/}\n                {/*  <Link href=\"/about\" className=\"nav-value\">*/}\n                {/*    <div  className=\"icon-image\">*/}\n                {/*      <img path=\"/about\" src={about}/>*/}\n                {/*    </div>*/}\n                {/*    <div className=\"nav-value\">*/}\n                {/*      Поддержка*/}\n                {/*    </div>*/}\n                {/*  </Link>*/}\n\n                {/*</div>*/}\n              </div>\n            </div>\n            <div className=\"content-wall-views\">\n              {\n                isLoaded ?\n                    <div className=\"feed-wrapper\">\n                      <div className=\"main-place-wrapper\">\n                        <div className=\"main-place-photo-column child\">\n                          <img src={result[0].avatar_url} alt={result[0]?.login}/>\n                        </div>\n                        <div className=\"main-place-info-column child\">\n                          <div className=\"main-place name\">\n                            {\n                              result[0]?.name ?\n                                  \" \"+result[0].name\n                                  :\n                                  \" \"+result[0].login\n                            }\n                          </div>\n                          <div className=\"main-place\">\n                            Email:\n                            {\n                              Number(this.state.id) === this.state.data[0].id ?\n                                  result[0]?.email ?\n                                      \" \"+result[0].email\n                                      :\n                                      \" не указан\"\n                                  :\n                                  \" Скрыт либо не задан\"\n\n                            }\n                          </div>\n                          <div className=\"main-place\">\n                            Компания:\n                            {\n                              result[0]?.company ?\n                                  \" \"+result[0].company\n                                  :\n                                  \" не указана\"\n                            }\n                          </div>\n                          <div className=\"main-place\">\n                            Локация:\n                            {\n                              result[0]?.location ?\n                                  \" \"+result[0].location\n                                  :\n                                  \" не указана\"\n                            }\n                          </div>\n                          <div className=\"main-place\">\n\n                            {\n                              Number(this.state.id) !== this.state.data[0].id ?\n                                  <div className=\"button-default\" onClick={this.createChat}>\n                                    Начать диалог\n                                  </div>\n                                  :\n                                  null\n                            }\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"feed-wrapper-item background-white\">\n\n                        {\n                          Number(this.state.id)  === this.state.data[0].id ?\n                              result?.map(res =>\n                                  <div className=\"feed-item-value\">\n\n                                    <div key={res.avatar_url} className=\"wrapper-data\">\n                                      <div key=\"aksdlkasd\" className=\"photo-wrapper\">\n                                        <img key=\"asdmmmmasd\" src={res?.avatar_url} alt={res?.login}/>\n                                      </div>\n\n                                      <div className=\"value-post placeholder-main-feed\" id=\"main_input\" onClick={\n                                        !clicked_new_post ? this.newInputText : null\n                                      }>\n\n                                        {\n                                          this.state.clicked_new_post ?\n                                              <div className=\"textarea-hide\">\n                                                <TextareaAutosize className=\"feed-textarea\" onChange={this.handleChangeTextarea}\n                                                                  autoFocus={true} placeholder=\"Что у Вас нового?\" id=\"text_news\">\n\n                                                </TextareaAutosize>\n                                              </div>\n\n                                              :\n                                              <div className=\"fake-textarea\">Что у Вас нового?</div>\n                                        }\n                                      </div>\n                                    </div>\n\n                                    {\n                                      this.state.clicked_new_post ?\n                                          <div className=\"wrapper-flex-end create-feed-wrapper-button\">\n                                            <div className=\"button-default-icon\" onClick={() => {\n                                              this.setState(prevState => ({\n                                                close: !prevState.close\n                                              }));\n                                            }}>\n                                              {\n                                                this.state.close ?\n                                                    <img src={close} alt=\"close\"/>\n                                                    :\n                                                    <img src={open} alt=\"open\"/>\n                                              }\n\n                                            </div>\n                                            <div className=\"button-default\" onClick={() => this.previewClick(\"preview-news\")}>Показать что получилось</div>\n                                            <div className=\"button-default\" onClick={() => this.feedNew()}>Опубликовать</div>\n                                          </div>\n                                          :\n                                          <div />\n                                    }\n                                    <div className=\"preview-news\">\n\n                                      <div className=\"feed-wrapper-item\">\n                                        <div className=\"feed-item-value\">\n                                          <div className=\"wrapper-data\">\n                                            <ReactMarkdown className=\"value-post\" remarkPlugins={[gfm]} components={this.components}>\n                                              {textNews}\n                                            </ReactMarkdown>\n                                          </div>\n                                        </div>\n                                      </div>\n\n                                    </div>\n                                  </div>\n                              )\n                              :\n                              null\n                        }\n\n\n                      </div>\n                      {mainFeed?.map(data =>\n                          <div key={data?.ID}  className=\"feed-wrapper-item\">\n                            {/*<div className=\"feed-item-title\">*/}\n                            {/*  <div className=\"wrapper-flex-start\">{data?.title}</div>*/}\n                            {/*  <div key=\"mamdmkamasdasd\" className=\"author-name wrapper-flex-end unselectable\" onClick={(e) => {*/}\n                            {/*    e.preventDefault();*/}\n                            {/*    window.open('https://github.com/' + data?.user, \"_blank\");*/}\n                            {/*  }}>*/}\n                            {/*    {data?.user}*/}\n                            {/*  </div>*/}\n                            {/*</div>*/}\n                            {/*<div className=\"feed-item-datetime\">*/}\n                            {/*  {this.unixToDateTime(data?.date_time)}*/}\n                            {/*</div>*/}\n                            <div className=\"feed-item-value\">\n                              <div key=\"asldk\" className=\"wrapper-data\">\n                                <div key=\"aksdlkasd\"  className=\"photo-wrapper\">\n                                  <img key=\"asdmmmmasd\" src={data?.photo} alt={data?.user} />\n                                </div>\n                                <div className=\"value-post\">\n                                  <div className=\"feed-item-title\">\n                                    {data?.user}\n                                    <div className=\"feed-item-datetime\">\n                                      {this.unixToDateTime(data?.date_time)}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div key=\"asldk\" className=\"wrapper-data\">\n                                {/*<div key=\"aksdlkasd\"  className=\"photo-wrapper\">*/}\n\n                                {/*</div>*/}\n                                <ReactMarkdown className=\"value-post\" remarkPlugins={[gfm]} components={this.components}>\n                                  {data?.value?.substring(0, 200) + \"...\"}\n                                </ReactMarkdown>\n                              </div>\n                            </div>\n                            <div className=\"wrapper-bottom\">\n                              <div className=\"wrapper-flex-start\">\n                                <div className=\"button-default\" onClick={(e) => {\n                                  e.preventDefault();\n                                  window.location.href = `/post?uuid=${data?.ID}`\n                                }}>Подробнее</div>\n                                <div className=\"button-default-icon-disable\" >\n                                  {\n                                    data?.close ?\n                                        <img src={close} alt=\"close\"/>\n                                        :\n                                        <img src={open} alt=\"open\"/>\n                                  }\n\n                                </div>\n                              </div>\n                              <div className=\"like_wrapper wrapper-flex-end\">\n                                <div className=\"like\">\n                                  <div className=\"like-item\">\n                                    <img src={look}  alt=\"like\"/>\n                                  </div>\n                                  <div className=\"like-item\">\n                                            <span className=\"like-count\">\n                                                {data?.look_count}\n                                            </span>\n                                  </div>\n                                </div>\n                                <div className=\"like\">\n\n                                  <div className=\"like-item\" onClick={() => this.like(data?.ID)}>\n                                    <img src={like}  alt=\"like\"/>\n                                  </div>\n                                  <div className=\"like-item\">\n                              <span className=\"like-count\" id={data?.ID}>\n                                  {data?.count_like}\n                              </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      )}\n\n                    </div>\n                  :\n                    this.state.notUser && this.state.auth ?\n                        <div>\n                          <div style={{\"background\": \"#FF9898\"}} className=\"title-page\">\n                            Ошибка\n                          </div>\n                          <div className=\"error-wrapper\">\n\n                            <div className=\"error-page\">\n                              Такого пользователя не существует\n                            </div>\n                          </div>\n                        </div>\n                      :\n                        this.state.error ?\n                            <div>\n                              {/*<div style={{\"background\": \"#FF9898\"}} className=\"title-page\">*/}\n                              {/*  Ошибка*/}\n                              {/*</div>*/}\n                              <div className=\"error-wrapper\">\n\n                                <div className=\"error-page\">\n                                  Авторизуйтесь чтобы просматривать профили пользователей.\n                                </div>\n                              </div>\n                            </div>\n                          :\n                            <div className=\"feed-wrapper\" style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                              alignItems: \"center\"\n                            }}>\n                              <div className=\"loader\" />\n                            </div>\n              }\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default MainUsers;\n","/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Main.js",[],"/Users/andrejsmelev-sampanov/Documents/org_devcodemylife/frontend/src/components/Footer.js",[],{"ruleId":"57","severity":1,"message":"58","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":12},{"ruleId":"57","severity":1,"message":"62","line":12,"column":8,"nodeType":"59","messageId":"60","endLine":12,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":13,"column":8,"nodeType":"59","messageId":"60","endLine":13,"endColumn":13},{"ruleId":"57","severity":1,"message":"64","line":14,"column":8,"nodeType":"59","messageId":"60","endLine":14,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":12},{"ruleId":"57","severity":1,"message":"62","line":9,"column":8,"nodeType":"59","messageId":"60","endLine":9,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":13},{"ruleId":"57","severity":1,"message":"64","line":11,"column":8,"nodeType":"59","messageId":"60","endLine":11,"endColumn":14},{"ruleId":"57","severity":1,"message":"65","line":14,"column":8,"nodeType":"59","messageId":"60","endLine":14,"endColumn":12},{"ruleId":"57","severity":1,"message":"65","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":11,"column":8,"nodeType":"59","messageId":"60","endLine":11,"endColumn":12},{"ruleId":"57","severity":1,"message":"62","line":14,"column":8,"nodeType":"59","messageId":"60","endLine":14,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":15,"column":8,"nodeType":"59","messageId":"60","endLine":15,"endColumn":13},{"ruleId":"57","severity":1,"message":"64","line":16,"column":8,"nodeType":"59","messageId":"60","endLine":16,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'home' is defined but never used.","'notification' is defined but never used.","'about' is defined but never used.","'Footer' is defined but never used.","'Head' is defined but never used."]